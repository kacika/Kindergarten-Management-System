<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bskms.mapper.ClassesMapper">
  <resultMap id="BaseResultMap" type="com.bskms.bean.Classes">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="bzr_id" jdbcType="VARCHAR" property="bzrId" />
    <result column="describe" jdbcType="VARCHAR" property="describe" />
    <result column="stu_count" jdbcType="INTEGER" property="stuCount" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="user_name" jdbcType="TIMESTAMP" property="userName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, bzr_id, `describe`, stu_count, position, create_time
  </sql>
  <select id="selectByExample" parameterType="com.bskms.bean.ClassesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from classes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from classes
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from classes
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bskms.bean.ClassesExample">
    delete from classes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bskms.bean.Classes">
    insert into classes (id, name, bzr_id, 
      `describe`, stu_count, position, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{bzrId,jdbcType=VARCHAR}, 
      #{describe,jdbcType=VARCHAR}, #{stuCount,jdbcType=INTEGER}, #{position,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bskms.bean.Classes">
    insert into classes
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="bzrId != null">
        bzr_id,
      </if>
      <if test="describe != null">
        `describe`,
      </if>
      <if test="stuCount != null">
        stu_count,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="bzrId != null">
        #{bzrId,jdbcType=VARCHAR},
      </if>
      <if test="describe != null">
        #{describe,jdbcType=VARCHAR},
      </if>
      <if test="stuCount != null">
        #{stuCount,jdbcType=INTEGER},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bskms.bean.ClassesExample" resultType="java.lang.Long">
    select count(*) from classes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update classes
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.bzrId != null">
        bzr_id = #{record.bzrId,jdbcType=VARCHAR},
      </if>
      <if test="record.describe != null">
        `describe` = #{record.describe,jdbcType=VARCHAR},
      </if>
      <if test="record.stuCount != null">
        stu_count = #{record.stuCount,jdbcType=INTEGER},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update classes
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      bzr_id = #{record.bzrId,jdbcType=VARCHAR},
      `describe` = #{record.describe,jdbcType=VARCHAR},
      stu_count = #{record.stuCount,jdbcType=INTEGER},
      position = #{record.position,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bskms.bean.Classes">
    update classes
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="bzrId != null">
        bzr_id = #{bzrId,jdbcType=VARCHAR},
      </if>
      <if test="describe != null">
        `describe` = #{describe,jdbcType=VARCHAR},
      </if>
      <if test="stuCount != null">
        stu_count = #{stuCount,jdbcType=INTEGER},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bskms.bean.Classes">
    update classes
    set name = #{name,jdbcType=VARCHAR},
      bzr_id = #{bzrId,jdbcType=VARCHAR},
      `describe` = #{describe,jdbcType=VARCHAR},
      stu_count = #{stuCount,jdbcType=INTEGER},
      position = #{position,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getAllClassByLimit" parameterType="com.bskms.bean.Classes" resultMap="BaseResultMap">
   select c.*,u.user_name from classes c
    left join user u on c.bzr_id=user_id
    where u.user_state=1
   <if test="name!=null and name!=''">
				and c.name like concat('%',#{name},'%')
	</if>
	<if test="userName!=null and userName!=''">
				and u.user_name like concat('%',#{userName},'%')
	</if>
    <if test="limit!=null">
			limit #{page}, #{limit}
	</if>
  </select>
  
  <select id="countAllClassByLimit" parameterType="com.bskms.bean.Classes" resultType="int">
    select count(*) from classes c
    left join user u on c.bzr_id=user_id
    where u.user_state=1
   <if test="name!=null and name!=''">
				and c.name like concat('%',#{name},'%')
	</if>
	<if test="userName!=null and userName!=''">
				and u.user_name like concat('%',#{userName},'%')
	</if>
  </select>
  <select id="selectAllClasses" parameterType="com.bskms.bean.Classes" resultMap="BaseResultMap">
    select * from classes
  </select>
</mapper>