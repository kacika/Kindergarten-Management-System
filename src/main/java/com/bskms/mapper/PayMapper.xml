<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bskms.mapper.PayMapper">
  <resultMap id="BaseResultMap" type="com.bskms.bean.Pay">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="base" jdbcType="DOUBLE" property="base" />
    <result column="overtime" jdbcType="DOUBLE" property="overtime" />
    <result column="traffic" jdbcType="DOUBLE" property="traffic" />
    <result column="meal" jdbcType="DOUBLE" property="meal" />
    <result column="vacation" jdbcType="DOUBLE" property="vacation" />
    <result column="bonus" jdbcType="DOUBLE" property="bonus" />
    <result column="other" jdbcType="DOUBLE" property="other" />
    <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="user_name" jdbcType="VARCHAR" property="userName"/>
    <result column="minBase" jdbcType="DOUBLE" property="minBase"/>
    <result column="maxBase" jdbcType="DOUBLE" property="maxBase"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, base, overtime, traffic, meal, vacation, bonus, other, payment_time
  </sql>
  <select id="selectByExample" parameterType="com.bskms.bean.PayExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pay
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pay
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bskms.bean.PayExample">
    delete from pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bskms.bean.Pay">
    insert into pay (id, name, base, 
      overtime, traffic, meal, 
      vacation, bonus, other, 
      payment_time)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{base,jdbcType=DOUBLE}, 
      #{overtime,jdbcType=DOUBLE}, #{traffic,jdbcType=DOUBLE}, #{meal,jdbcType=DOUBLE}, 
      #{vacation,jdbcType=DOUBLE}, #{bonus,jdbcType=DOUBLE}, #{other,jdbcType=DOUBLE}, 
      #{paymentTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bskms.bean.Pay">
    insert into pay
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="base != null">
        base,
      </if>
      <if test="overtime != null">
        overtime,
      </if>
      <if test="traffic != null">
        traffic,
      </if>
      <if test="meal != null">
        meal,
      </if>
      <if test="vacation != null">
        vacation,
      </if>
      <if test="bonus != null">
        bonus,
      </if>
      <if test="other != null">
        other,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="base != null">
        #{base,jdbcType=DOUBLE},
      </if>
      <if test="overtime != null">
        #{overtime,jdbcType=DOUBLE},
      </if>
      <if test="traffic != null">
        #{traffic,jdbcType=DOUBLE},
      </if>
      <if test="meal != null">
        #{meal,jdbcType=DOUBLE},
      </if>
      <if test="vacation != null">
        #{vacation,jdbcType=DOUBLE},
      </if>
      <if test="bonus != null">
        #{bonus,jdbcType=DOUBLE},
      </if>
      <if test="other != null">
        #{other,jdbcType=DOUBLE},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bskms.bean.PayExample" resultType="java.lang.Long">
    select count(*) from pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pay
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.base != null">
        base = #{record.base,jdbcType=DOUBLE},
      </if>
      <if test="record.overtime != null">
        overtime = #{record.overtime,jdbcType=DOUBLE},
      </if>
      <if test="record.traffic != null">
        traffic = #{record.traffic,jdbcType=DOUBLE},
      </if>
      <if test="record.meal != null">
        meal = #{record.meal,jdbcType=DOUBLE},
      </if>
      <if test="record.vacation != null">
        vacation = #{record.vacation,jdbcType=DOUBLE},
      </if>
      <if test="record.bonus != null">
        bonus = #{record.bonus,jdbcType=DOUBLE},
      </if>
      <if test="record.other != null">
        other = #{record.other,jdbcType=DOUBLE},
      </if>
      <if test="record.paymentTime != null">
        payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pay
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      base = #{record.base,jdbcType=DOUBLE},
      overtime = #{record.overtime,jdbcType=DOUBLE},
      traffic = #{record.traffic,jdbcType=DOUBLE},
      meal = #{record.meal,jdbcType=DOUBLE},
      vacation = #{record.vacation,jdbcType=DOUBLE},
      bonus = #{record.bonus,jdbcType=DOUBLE},
      other = #{record.other,jdbcType=DOUBLE},
      payment_time = #{record.paymentTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bskms.bean.Pay">
    update pay
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="base != null">
        base = #{base,jdbcType=DOUBLE},
      </if>
      <if test="overtime != null">
        overtime = #{overtime,jdbcType=DOUBLE},
      </if>
      <if test="traffic != null">
        traffic = #{traffic,jdbcType=DOUBLE},
      </if>
      <if test="meal != null">
        meal = #{meal,jdbcType=DOUBLE},
      </if>
      <if test="vacation != null">
        vacation = #{vacation,jdbcType=DOUBLE},
      </if>
      <if test="bonus != null">
        bonus = #{bonus,jdbcType=DOUBLE},
      </if>
      <if test="other != null">
        other = #{other,jdbcType=DOUBLE},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bskms.bean.Pay">
    update pay
    set name = #{name,jdbcType=VARCHAR},
      base = #{base,jdbcType=DOUBLE},
      overtime = #{overtime,jdbcType=DOUBLE},
      traffic = #{traffic,jdbcType=DOUBLE},
      meal = #{meal,jdbcType=DOUBLE},
      vacation = #{vacation,jdbcType=DOUBLE},
      bonus = #{bonus,jdbcType=DOUBLE},
      other = #{other,jdbcType=DOUBLE},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <select id="getAllPayByLimit" parameterType="com.bskms.bean.ClaTea" resultMap="BaseResultMap">
   select p.*,u.user_name from pay p
   left join user u on p.name=u.user_id
   where u.user_state=1
     <if test="minBase!=null and minBase!=''">
		and p.base &gt; #{minBase,jdbcType=DOUBLE}
	</if>
	 <if test="minBase!=null and maxBase!=''">
		and p.base &lt; #{maxBase,jdbcType=DOUBLE}
	</if>
	<if test="minDate!=null and minDate!=''">
		and p.payment_time &gt;= #{minDate,jdbcType=DOUBLE}
	</if>
	<if test="maxDate!=null and maxDate!=''">
		and p.payment_time &lt;= #{maxDate,jdbcType=DOUBLE}
	</if>
    <if test="limit!=null">
		limit #{page}, #{limit}
	</if>
  </select>
  <select id="countAllPayByLimit" parameterType="com.bskms.bean.ClaTea" resultType="int">
      select count(*) from pay p
   left join user u on p.name=u.user_id
   where u.user_state=1
    <if test="minBase!=null and minBase!=''">
		and p.base &gt; #{minBase,jdbcType=DOUBLE}
	</if>
	<if test="minBase!=null and maxBase!=''">
		and p.base &lt; #{maxBase,jdbcType=DOUBLE}
	</if>
	<if test="minDate!=null and minDate!=''">
		and p.payment_time &gt;= #{minDate,jdbcType=DOUBLE}
	</if>
	<if test="maxDate!=null and maxDate!=''">
		and p.payment_time &lt;= #{maxDate,jdbcType=DOUBLE}
	</if>
  </select>
</mapper>