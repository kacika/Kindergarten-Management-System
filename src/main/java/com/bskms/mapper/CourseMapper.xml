<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bskms.mapper.CourseMapper">
  <resultMap id="BaseResultMap" type="com.bskms.bean.Course">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="tea_name" jdbcType="VARCHAR" property="teaName" />
    <result column="start" jdbcType="TIMESTAMP" property="start" />
    <result column="end" jdbcType="TIMESTAMP" property="end" />

    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
    <result column="cname" jdbcType="VARCHAR" property="cname" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, tea_name, `start`, `end`, create_time, class_id
  </sql>
  <select id="selectByExample" parameterType="com.bskms.bean.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `course`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `course`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `course`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bskms.bean.CourseExample">
    delete from `course`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bskms.bean.Course">
    insert into `course` (id, `name`, tea_name, 
      `start`, `end`,  create_time, class_id
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{teaName,jdbcType=VARCHAR}, 
      #{start,jdbcType=TIMESTAMP}, #{end,jdbcType=TIMESTAMP},  #{createTime,jdbcType=TIMESTAMP}, #{classId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bskms.bean.Course">
    insert into `course`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="teaName != null">
        tea_name,
      </if>
      <if test="start != null">
        `start`,
      </if>
      <if test="end != null">
        `end`,
      </if>
   
      <if test="createTime != null">
        create_time,
      </if>
      <if test="classId != null">
        class_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="teaName != null">
        #{teaName,jdbcType=VARCHAR},
      </if>
      <if test="start != null">
        #{start,jdbcType=TIMESTAMP},
      </if>
      <if test="end != null">
        #{end,jdbcType=TIMESTAMP},
      </if>

      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bskms.bean.CourseExample" resultType="java.lang.Long">
    select count(*) from `course`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `course`
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.teaName != null">
        tea_name = #{record.teaName,jdbcType=VARCHAR},
      </if>
      <if test="record.start != null">
        `start` = #{record.start,jdbcType=TIMESTAMP},
      </if>
      <if test="record.end != null">
        `end` = #{record.end,jdbcType=TIMESTAMP},
      </if>

      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `course`
    set id = #{record.id,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      tea_name = #{record.teaName,jdbcType=VARCHAR},
      `start` = #{record.start,jdbcType=TIMESTAMP},
      `end` = #{record.end,jdbcType=TIMESTAMP},

      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      class_id = #{record.classId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bskms.bean.Course">
    update `course`
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="teaName != null">
        tea_name = #{teaName,jdbcType=VARCHAR},
      </if>
      <if test="start != null">
        `start` = #{start,jdbcType=TIMESTAMP},
      </if>
      <if test="end != null">
        `end` = #{end,jdbcType=TIMESTAMP},
      </if>

      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bskms.bean.Course">
    update `course`
    set `name` = #{name,jdbcType=VARCHAR},
      tea_name = #{teaName,jdbcType=VARCHAR},
      `start` = #{start,jdbcType=TIMESTAMP},
      `end` = #{end,jdbcType=TIMESTAMP},

      create_time = #{createTime,jdbcType=TIMESTAMP},
      class_id = #{classId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <select id="getNowCourse"  resultMap="BaseResultMap">
   	SELECT c.*
	FROM course c
	WHERE c.class_id = #{classId,jdbcType=INTEGER}
	AND c.start &lt;= #{s,jdbcType=VARCHAR}
	AND c.end &gt;= #{d,jdbcType=VARCHAR}
  </select>
  <select id="getAllCourse"  resultMap="BaseResultMap">
    SELECT c.*, cl.name cname
	FROM course c
	LEFT JOIN classes cl
	ON cl.id = c.class_id
  </select>
  
  <select id="getAllCourseByLimit" parameterType="com.bskms.bean.Course" resultMap="BaseResultMap">
   	SELECT c.*,
	cl.NAME as cname
	FROM course as c
	LEFT JOIN classes as cl
	ON cl.id = c.class_id
	where 1=1
   <if test="cname!=null and cname!=''">
		and cl.name like concat('%',#{cname},'%')
	</if>
    <if test="limit!=null">
			limit #{page}, #{limit}
	</if>
  </select>
  
  <select id="getAllCourseByLimitCout" parameterType="com.bskms.bean.Course" resultType="int">
    SELECT count(0)
	FROM course c
	LEFT JOIN classes cl
	ON cl.id = c.class_id
	 where 1=1
  	<if test="cname!=null and cname!=''">
		and cl.name like concat('%',#{cname},'%')
	</if>
  </select>
</mapper>